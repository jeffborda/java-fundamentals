import java.io.BufferedReader;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;

/*
 * This Java source file was generated by the Gradle 'init' task.
 */
public class App {

    public static void main(String[] args) {

        Path filePath = Paths.get("resources/gates.js");
        jsLinter(filePath);
    }

    /**
     * Reads a JavaScript file with a given Path, and prints an error whenever it finds a line that doesn’t end in a
     * semi-colon.  Don’t show an error if the line is empty, ends with an opening curly brace, ends with an closing
     * curly brace, or if the line contains if or else
     */
    public static void jsLinter(Path path) {

        try (BufferedReader br = Files.newBufferedReader(path)){

            String currentLine = "";
            int lineNumber = 0;

            while(currentLine != null) {
                if(checkErrorValid(currentLine)) {
                    System.out.println("Line " + lineNumber + ": Missing semicolon.");
                }
                lineNumber++;
                currentLine = br.readLine();
            }
        } catch (IOException e) {
            System.out.println(e);
        }


    }

    /**
     * Checks for items that do not throw errors: line is empty, ends with an opening curly brace, ends with an closing
     * curly brace, or if the line contains if or else.  Returns true if error can be thrown.  Returns false if no error
     * should be thrown.
     */
    private static boolean checkErrorValid(String line) {

        if(line.isBlank() || line.isEmpty() || line.endsWith("{") || line.endsWith("}") || line.contains("if") || line.contains("else")) {
            return false;
        }
        return true;
    }


}
